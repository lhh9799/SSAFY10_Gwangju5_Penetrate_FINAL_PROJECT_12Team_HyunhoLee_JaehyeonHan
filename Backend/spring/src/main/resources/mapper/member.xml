<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.vue.member.model.mapper.MemberMapper">

	<resultMap type="memberDto" id="member">
		<result column="user_id" property="userId"/>
		<result column="user_name" property="userName"/>
		<result column="user_password" property="userPwd"/>
		<result column="email_id" property="emailId"/>
		<result column="email_domain" property="emailDomain"/>
		<result column="join_date" property="joinDate"/>
		<result column="token" property="refreshToken"/>
	</resultMap>
	
	<resultMap type="NewPwdDto" id="NewPwd">
		<result column="user_id" property="userId"/>
		<result column="user_password" property="newUserPwd"/>
	</resultMap>
	
	<!-- <resultMap type="ItineraryDto" id="ItineraryDto"> -->
	<resultMap type="itineraryDto" id="itineraryDto">
		<result column="user_id" property="userId"/>
		<result column="day" property="day"/>
		<result column="title" property="title"/>
		<result column="content_id" property="contentId"/>
		<result column="addr" property="addr"/>
		<result column="latitude" property="latitude"/>
		<result column="longtitude" property="longtitude"/>
		<result column="sequence" property="sequence"/>
	</resultMap>

	<select id="login" parameterType="map" resultMap="member">
		select user_id, user_name, token
		from members
		where user_id = #{userId} and user_password = #{userPwd}
	</select>
	
	<select id="userInfo" parameterType="string" resultMap="member">
		select user_name, user_id, email_id, email_domain, join_date
		from members
		where user_id = #{userId}
	</select>
	
	<update id="saveRefreshToken" parameterType="map">
		update members
		set token = #{token}
		where user_id = #{userId}
	</update>
	
	<select id="getRefreshToken" parameterType="string" resultType="string">
		select token
		from members
		where user_id = #{userId}
	</select>
	
	<update id="deleteRefreshToken" parameterType="map">
		update members
		set token = #{token, jdbcType=VARCHAR}
		where user_id = #{userId}
	</update>
	
	<!-- 이현호 추가 -->
	<insert id="join">
		INSERT INTO members (user_id, user_name, user_password, email_id, email_domain, join_date)
		VALUES (#{userId}, #{userName}, #{userPwd}, #{emailId}, #{emailDomain}, now())
	</insert>
	
	<!-- 한재현 추가 -->
	<delete id="delete">
		DELETE FROM members
		WHERE user_id = #{userId}
	</delete>
	
	<!-- 한재현 추가 -->
	<select id="getPwdFromId" parameterType="string" resultType="string">
		select user_password
		from members
		where user_id = #{userId}
	</select>
	
	<!-- 한재현 추가 -->
	<update id="updatePwd" parameterType="NewPwdDto">
		UPDATE members
		SET user_password = #{newUserPwd}
		WHERE user_id = #{userId}
	</update>
	
	<!-- 이현호 추가 -->
	<!-- <insert id="registerPlan" parameterMap="ItineraryDto"> -->
	<insert id="registPlan">
		<!-- INSERT INTO itinerary(user_id, day, title, content_id, addr, latitude, longtitude, sequence)
		VALUES('ssafy', '1', '국립 청태산자연휴양림', '125266', '강원도 횡성군 둔내면 청태산로 610', '37.52251412000000000', '128.29191150000000000', 1); -->
		
		INSERT INTO itinerary(user_id, day, title, content_id, addr, latitude, longtitude, sequence)
		VALUES(#{userId}, #{day}, #{title}, #{contentId}, #{addr}, #{latitude}, #{longtitude}, #{sequence});
	</insert>
	
	<!-- 이현호 추가 -->
	<select id="getPlan" parameterType="string" resultMap="itineraryDto">
	<!-- <select id="getPlan" parameterType="string" resultType="com.ssafy.vue.member.model.ItineraryDto"> -->
		<!-- SELECT * FROM itinerary WHERE user_id = 'ssafy'; -->
		SELECT * FROM itinerary WHERE user_id = #{userId} ORDER BY sequence;
	</select>
	
	<!-- 이현호 추가 -->
	<update id="deleteOneDayPlan" parameterType="Map">
		DELETE FROM itinerary
		WHERE user_id = #{userId} AND day = #{day}
	</update>
</mapper>